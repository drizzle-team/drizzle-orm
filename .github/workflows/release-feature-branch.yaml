name: Release (feature branch)

on:
  push:
    branches-ignore:
      - main
  pull_request: {}

jobs:  
  
  release:
    # only run on all pushes or pull requests from forks
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    # needs: 
    #   - attw
    strategy:
      matrix:
        package:
          - drizzle-orm  
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '18.18'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install
 
      - name: Build Prisma client
        working-directory: drizzle-orm
        run: pnpm prisma generate --schema src/prisma/schema.prisma

      - name: Build      
        run: pnpm build

      - name: Pack      
        working-directory: ${{ matrix.package }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: npm run pack

      - name: Publish
        if: github.event_name == 'push'
        run: |
          version="${{ steps.checks.outputs.version }}"

          echo "Publishing ${{ matrix.package }}@$version"
          npm run publish --access public

          echo "npm: \`+ ${{ matrix.package }}@$version\`" >> $GITHUB_STEP_SUMMARY

          # Post release message to Discord
          # curl -X POST -H "Content-Type: application/json" -d "{\"embeds\": [{\"title\": \"New \`${{ matrix.package }}\` release! ðŸŽ‰\", \"url\": \"https://www.npmjs.com/package/${{ matrix.package }}/v/$version\", \"color\": \"12907856\", \"fields\": [{\"name\": \"Version\", \"value\": \"\`$version\`\"}, {\"name\": \"Tag\", \"value\": \"\`$tag\`\"}]}]}" ${{ secrets.DISCORD_DEV_RELEASE_WEBHOOK_URL }}
        working-directory: ${{ matrix.package }}
        shell: bash
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
// AUTOGENERATED FILE
// This file was generated from grammar.ohm by `ohm generateBundles`.

import { BaseActionDict, Grammar, IterationNode, Node, NonterminalNode, Semantics, TerminalNode } from 'ohm-js';

export interface PGArrayActionDict<T> extends BaseActionDict<T> {
	Array?: (this: NonterminalNode, arg0: TerminalNode, arg1: NonterminalNode, arg2: TerminalNode) => T;
	ArrayItem?: (this: NonterminalNode, arg0: NonterminalNode) => T;
	stringLiteral?: (this: NonterminalNode, arg0: TerminalNode, arg1: IterationNode, arg2: TerminalNode) => T;
	quotelessString?: (this: NonterminalNode, arg0: IterationNode) => T;
	escapedSymbol?: (this: NonterminalNode, arg0: TerminalNode, arg1: NonterminalNode) => T;
	nullLiteral?: (this: NonterminalNode, arg0: TerminalNode) => T;
	forbiddenSymbolForQuoteless?: (this: NonterminalNode, arg0: NonterminalNode | TerminalNode) => T;
}

export interface PGArraySemantics extends Semantics {
	addOperation<T>(name: string, actionDict: PGArrayActionDict<T>): this;
	extendOperation<T>(name: string, actionDict: PGArrayActionDict<T>): this;
	addAttribute<T>(name: string, actionDict: PGArrayActionDict<T>): this;
	extendAttribute<T>(name: string, actionDict: PGArrayActionDict<T>): this;
}

export interface PGArrayGrammar extends Grammar {
	createSemantics(): PGArraySemantics;
	extendSemantics(superSemantics: PGArraySemantics): PGArraySemantics;
}

declare const grammar: PGArrayGrammar;
export default grammar;
